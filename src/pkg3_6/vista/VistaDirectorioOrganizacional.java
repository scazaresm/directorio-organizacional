/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pkg3_6.vista;

import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import pkg3_6.controlador.ControladorDepartamentos;
import pkg3_6.modelo.Departamento;
import pkg3_6.modelo.Persona;

/**
 *
 * @author Sergio Cazares
 */
public final class VistaDirectorioOrganizacional extends javax.swing.JPanel {

    /**
     * Creates new form VistaDirectorioOrganizacional2
     */
    public VistaDirectorioOrganizacional() {
        initComponents();        
        this.LabelTitulo.setText("Directorio Organizacional");
        this.PanelInfoEmpleado.setVisible(false);
        this.controladorDepartamentos = new ControladorDepartamentos(); 
        this.inicializarArbolDepartamentos();
        this.cargarDepartamentos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        arbolDepartamentos = new javax.swing.JTree();
        PanelInfoEmpleado = new javax.swing.JPanel();
        LabelNombreEmpleado = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        LabelTelefonoEmpleado = new javax.swing.JLabel();
        LabelEmailEmpleado = new javax.swing.JLabel();
        LabelCubiculoEmpleado = new javax.swing.JLabel();
        LabelInfo = new javax.swing.JLabel();
        LabelTitulo = new javax.swing.JLabel();
        TextoNombreBuscador = new javax.swing.JTextField();
        BotonBuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        BotonActualizar = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(590, 430));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Departamentos");
        arbolDepartamentos.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        arbolDepartamentos.setName(""); // NOI18N
        jScrollPane1.setViewportView(arbolDepartamentos);

        LabelNombreEmpleado.setText("<nombre>");

        jLabel2.setText("Nombre del empleado:");

        jLabel3.setText("Teléfono:");

        jLabel4.setText("e-mail:");

        jLabel5.setText("Cubículo:");

        LabelTelefonoEmpleado.setText("<telefono>");

        LabelEmailEmpleado.setText("<e-mail>");

        LabelCubiculoEmpleado.setText("<cubiculo>");

        javax.swing.GroupLayout PanelInfoEmpleadoLayout = new javax.swing.GroupLayout(PanelInfoEmpleado);
        PanelInfoEmpleado.setLayout(PanelInfoEmpleadoLayout);
        PanelInfoEmpleadoLayout.setHorizontalGroup(
            PanelInfoEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInfoEmpleadoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(PanelInfoEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelInfoEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelCubiculoEmpleado)
                    .addComponent(LabelNombreEmpleado)
                    .addComponent(LabelTelefonoEmpleado)
                    .addComponent(LabelEmailEmpleado))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelInfoEmpleadoLayout.setVerticalGroup(
            PanelInfoEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInfoEmpleadoLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(PanelInfoEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelNombreEmpleado)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInfoEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(LabelTelefonoEmpleado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInfoEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(LabelEmailEmpleado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInfoEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(LabelCubiculoEmpleado))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        LabelInfo.setText("Seleccione un departamento para ver su información");

        LabelTitulo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        LabelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LabelTitulo.setText("Directorio Organizacional");

        BotonBuscar.setText("Buscar");
        BotonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBuscarActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar persona por su nombre:");

        BotonActualizar.setText("Actualizar");
        BotonActualizar.setToolTipText("");
        BotonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(PanelInfoEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextoNombreBuscador)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BotonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 133, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LabelInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotonActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(LabelTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelInfo)
                    .addComponent(BotonActualizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonBuscar)
                    .addComponent(TextoNombreBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PanelInfoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BotonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonActualizarActionPerformed
        this.cargarDepartamentos();
    }//GEN-LAST:event_BotonActualizarActionPerformed

    private void BotonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBuscarActionPerformed
        boolean encontrado = this.seleccionarNodoEmpleado(
                arbolDepartamentos, 
                TextoNombreBuscador.getText()
        );
        if(!encontrado) {
            String message = "El empleado '" + TextoNombreBuscador.getText() + "' no fue encontrado.";
            String title = "Empleado no encontrado.";
            JOptionPane.showMessageDialog(null, message, title, JOptionPane.INFORMATION_MESSAGE);
        }
        TextoNombreBuscador.setText("");
    }//GEN-LAST:event_BotonBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonActualizar;
    private javax.swing.JButton BotonBuscar;
    private javax.swing.JLabel LabelCubiculoEmpleado;
    private javax.swing.JLabel LabelEmailEmpleado;
    private javax.swing.JLabel LabelInfo;
    private javax.swing.JLabel LabelNombreEmpleado;
    private javax.swing.JLabel LabelTelefonoEmpleado;
    private javax.swing.JLabel LabelTitulo;
    private javax.swing.JPanel PanelInfoEmpleado;
    private javax.swing.JTextField TextoNombreBuscador;
    private javax.swing.JTree arbolDepartamentos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private final ControladorDepartamentos controladorDepartamentos;
    
    private void inicializarArbolDepartamentos() {
        arbolDepartamentos.addTreeSelectionListener((TreeSelectionEvent e) -> {
            DefaultMutableTreeNode selectedNode =
                    (DefaultMutableTreeNode) arbolDepartamentos
                            .getLastSelectedPathComponent();
            
            if (selectedNode == null) 
                return;
            
            Class objectClass = selectedNode.getUserObject().getClass();
            
            if( objectClass.equals(String.class) ) 
                callbackSeleccionRaiz();
            else if( objectClass.equals( Departamento.class ) )
                callbackSeleccionDepartamento( (Departamento)selectedNode.getUserObject() );
            else if ( objectClass.equals(Persona.class) )
                callbackSeleccionEmpleado( (Persona)selectedNode.getUserObject() );
        });
    }
    
    private void callbackSeleccionRaiz() {
        this.PanelInfoEmpleado.setVisible(false);
        this.LabelInfo.setText("Seleccione un departamento para ver su información.");
    }
    
    private void callbackSeleccionDepartamento(Departamento departamento) {
        this.PanelInfoEmpleado.setVisible(false);
        this.LabelInfo.setText(
            "Responsable: " + departamento.getResponsable() + " | " +
            "Teléfono: " + departamento.getTelefono()
        );
    }
    
    private void callbackSeleccionEmpleado(Persona empleado) {
        Departamento departamento = empleado.getDepartamento();
        this.LabelInfo.setText(
            "Responsable: " + departamento.getResponsable() + " | " +
            "Teléfono: " + departamento.getTelefono()
        );
        
        this.PanelInfoEmpleado.setVisible(true);
        this.LabelNombreEmpleado.setText(empleado.getNombre());
        this.LabelEmailEmpleado.setText(empleado.getEmail());
        this.LabelTelefonoEmpleado.setText(empleado.getTelefono());
        this.LabelCubiculoEmpleado.setText(empleado.getCubiculo());
    }
    
    public void cargarDepartamentos() {
        DefaultTreeModel modelo = (DefaultTreeModel)arbolDepartamentos.getModel();
        DefaultMutableTreeNode nodoRaiz = (DefaultMutableTreeNode) modelo.getRoot();
        nodoRaiz.removeAllChildren();
        for(Departamento dept : controladorDepartamentos.obtenerDepartamentos()) {
            dept.setNombre( dept.getNombre() );
            agregarDepartamento(dept);
        }
        modelo.reload(nodoRaiz);
    }
    
    public void agregarDepartamento(Departamento departamento) {
        DefaultMutableTreeNode nodoRaiz = (DefaultMutableTreeNode) arbolDepartamentos.getModel().getRoot();
        DefaultMutableTreeNode nodoDepartamento = new DefaultMutableTreeNode(departamento);
        for (int i=0; i<departamento.getPersonal().size(); i++) {
            DefaultMutableTreeNode nodoEmpleado = new DefaultMutableTreeNode(
                    departamento.getPersonal().get(i) 
            );
            nodoDepartamento.add(nodoEmpleado);
        }
        nodoRaiz.add(nodoDepartamento);
    }
  
    private boolean seleccionarNodoEmpleado(JTree arbolDepartamentos, String nombreEmpleado) {
        DefaultMutableTreeNode nodoRaiz = (DefaultMutableTreeNode) arbolDepartamentos.getModel().getRoot();
        
        for(int i=0; i<nodoRaiz.getChildCount(); i++) {
            DefaultMutableTreeNode nodoDept = (DefaultMutableTreeNode) nodoRaiz.getChildAt(i);
            for(int j=0; j<nodoDept.getChildCount(); j++) {
                DefaultMutableTreeNode nodoEmp = (DefaultMutableTreeNode) nodoDept.getChildAt(j);
                if( nodoEmp.toString().equals(nombreEmpleado) ) {
                    TreeNode[] path = ((DefaultTreeModel) arbolDepartamentos.getModel()).getPathToRoot(nodoEmp);
                    arbolDepartamentos.setSelectionPath(new TreePath(path));
                    return true;
                }
            }
        }
        return false;
    }
}
